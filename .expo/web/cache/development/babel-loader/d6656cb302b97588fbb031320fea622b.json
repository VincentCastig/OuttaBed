{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vincentcastigliola/Work/WhyWakeUp/wake-up-now/screens/HomeScreen.js\";\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as WebBrowser from 'expo-web-browser';\nimport TimePicker from \"../components/TimePicker\";\nimport Constants from 'expo-constants';\nimport axios from 'axios';\nimport expoAxios from \"../src/api/expoAxios\";\nimport localHost from \"../src/api/localHost\";\nimport * as Notifications from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\nimport registerForPushNotificationsAsync from \"../notifications\";\nexport default function HomeScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      expoPushToken = _useState4[0],\n      setExpoPushToken = _useState4[1];\n\n  var notificationListener = useRef();\n  var responseListener = useRef();\n  console.log('sending deviceId', Constants.deviceId);\n  var id = 'EFBD766B-FB1B-43AA-8189-679AAE20FC71';\n  useEffect(function () {\n    localHost.get(\"/get-time/\" + id).then(function (res) {\n      console.log(res);\n\n      if (res.data[0].device_id) {\n        var device_time = res.data[0].device_time;\n        setDate(device_time);\n      }\n    }).catch(function (error) {\n      console.log('the get-device-id error ', error);\n    });\n  }, []);\n\n  if (route.params) {\n    date = route.params.date;\n    console.log(route.params.data);\n  }\n\n  var time = \"\";\n  var period = \"\";\n  var hours = new Date(date).getUTCHours();\n\n  if (hours >= 12) {\n    period = \"PM\";\n  } else {\n    period = \"AM\";\n  }\n\n  time = ((hours + 11) % 12 + 1).toString();\n  time += \":\";\n\n  if (new Date(date).getUTCMinutes() < 10) {\n    time += \"0\" + new Date(date).getUTCMinutes();\n  } else {\n    time += new Date(date).getUTCMinutes();\n  }\n\n  var Item = function Item(_ref2) {\n    var title = _ref2.title;\n    return React.createElement(View, {\n      style: styles.itemBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, title, \" \", period), React.createElement(Button, {\n      title: \"Edit Time\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Edit\", {\n          newDate: date\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }));\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(Item, {\n      title: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    });\n  };\n\n  var DATA = [{\n    id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n    title: time\n  }];\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"Motivation Time \")), React.createElement(SafeAreaView, {\n    style: styles.safeArea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: DATA,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"Edit\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    borderColor: 'red',\n    borderWidth: 2,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    fontSize: 30,\n    marginBottom: 20,\n    marginTop: 10\n  },\n  itemBox: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    borderWidth: 2,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    width: \"100%\",\n    height: 63\n  },\n  safeArea: {\n    flex: 1\n  },\n  time: {\n    fontSize: 34\n  }\n});","map":{"version":3,"sources":["/Users/vincentcastigliola/Work/WhyWakeUp/wake-up-now/screens/HomeScreen.js"],"names":["React","Component","useState","useEffect","useRef","WebBrowser","TimePicker","Constants","axios","expoAxios","localHost","Notifications","Permissions","registerForPushNotificationsAsync","HomeScreen","route","navigation","date","setDate","expoPushToken","setExpoPushToken","notificationListener","responseListener","console","log","deviceId","id","get","then","res","data","device_id","device_time","catch","error","params","time","period","hours","Date","getUTCHours","toString","getUTCMinutes","Item","title","styles","itemBox","navigate","newDate","renderItem","item","DATA","container","header","safeArea","StyleSheet","create","flex","backgroundColor","borderColor","borderWidth","alignItems","justifyContent","fontSize","marginBottom","marginTop","flexDirection","borderLeftWidth","borderRightWidth","width","height"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect, useRef} from 'react';\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, SafeAreaView, View, FlatList, Button } from 'react-native';\nimport * as WebBrowser from 'expo-web-browser';\nimport TimePicker from '../components/TimePicker';\nimport Constants from 'expo-constants';\nimport axios from 'axios';\nimport expoAxios from '../src/api/expoAxios';\nimport localHost from '../src/api/localHost';\nimport * as Notifications from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\nimport registerForPushNotificationsAsync from '../notifications';\n\n\n\n\nexport default function HomeScreen({route, navigation}) {\n    let [date, setDate] = useState(0);\n    const [expoPushToken, setExpoPushToken] = useState(null);\n    const notificationListener = useRef();\n    const responseListener = useRef();\n\n    // useEffect(() => {\n    //     registerForPushNotificationsAsync().then(token => {\n    //         console.log(token);\n    //         //setExpoPushToken(token);\n    //         sendToken(token);\n    //     });\n    //\n    //     // This listener is fired whenever a notification is received while the app is foregrounded\n    //     notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n    //         setNotification(notification);\n    //     });\n    //\n    //     // This listener is fired whenever a user taps on or interacts with a notification (works when app is foregrounded, backgrounded, or killed)\n    //     responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n    //         console.log(response);\n    //\n    //     });\n    //\n    //\n    //     return () => {\n    //         Notifications.removeNotificationSubscription(notificationListener);\n    //         Notifications.removeNotificationSubscription(responseListener);\n    //     };\n    // }, []);\n\n\n    // const sendToken = async() => {\n        // console.log('sending ', token.data);\n        console.log('sending deviceId', Constants.deviceId);\n\n        // localHost.post('/createUser', {token: 'ExponentPushToken[qHhmjtM21eqgpgMASDMnpj1]', device_id: 'Constants.deviceId'}).then((res) => console.log(res)).catch((error) => console.log('createUser error ', error));\n\n\n            // axios.post('https://192.168.1.2:3000/createUser', {token: 'ExponentPushToken[qHhmjtM21eqgpgMASDMnpj1]', device_id: Constants.deviceId}).then((res) => console.log(res)).catch((error) => console.log('createUser error ', error));\n\n\n\n        // const message = {\n        //     to: token,\n        //     sound: 'default',\n        //     title: 'Original Title',\n        //     body: 'And here is the body!',\n        //     data: {data: 'goes here'},\n        // };\n        //\n        // await fetch('https://exp.host/--/api/v2/push/send', {\n        //     method: 'POST',\n        //     headers: {\n        //         accept: 'application/json',\n        //         'accept-encoding': 'gzip, deflate',\n        //         'content-type': 'application/json'\n        //     },\n        //     body: JSON.stringify(message)\n        // })\n\n\n    // };\n    //\n    // sendToken();\n\n\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         device_time: props.route.params,\n    //     }\n    //   }\n\n\n\n\n    // if (!date){\n    //     date = new Date(1598051730000);\n    //     console.log('default date  ', date);\n    //     console.log('device id on home page', Constants.deviceId);\n    let id = 'EFBD766B-FB1B-43AA-8189-679AAE20FC71';\n        useEffect(() => {\n            localHost.get(`/get-time/${id}`).then(res => {\n                console.log(res);\n                if (res.data[0].device_id) {\n                    const device_time = res.data[0].device_time;\n                    setDate(device_time);\n                }\n\n            }).catch(error => {\n                console.log('the get-device-id error ', error)\n            });\n        }, []);\n    // }\n\n\n        if (route.params) {\n            date = route.params.date;\n            console.log(route.params.data)\n        }\n\n\n          let time = \"\";\n          let period = \"\";\n\n          // if(typeof date == \"number\"){\n            let hours = new Date(date).getUTCHours();\n            if(hours >= 12){\n              period = \"PM\"\n            }\n            else{\n              period = \"AM\"\n            }\n            time = ((hours + 11) % 12 + 1).toString();\n            time += \":\";\n            if(new Date(date).getUTCMinutes() < 10){\n              time += \"0\" + new Date(date).getUTCMinutes();\n            }\n            else{\n              time += new Date(date).getUTCMinutes();\n            }\n          // }\n\n          const Item = ({ title }) => (\n            <View style={styles.itemBox}>\n              <Text style={styles.time}>{title} {period}</Text>\n              <Button\n                title=\"Edit Time\"\n                onPress={() => navigation.navigate(\"Edit\", {\n                    newDate: date\n                })}\n                  //onPress={() => sendNotification(expoPushToken)}\n                />\n            </View>\n          );\n            const renderItem = ({ item }) => (\n                <Item title={item.title} />\n              );\n\n              const DATA = [\n                {\n                  id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n                  title: time,\n                }\n              ];\n\n\n    return (\n        <View style={styles.container }>\n            <View>\n                <Text style={styles.header}>Motivation Time </Text>\n            </View>\n\n            <SafeAreaView style={styles.safeArea}>\n            <FlatList\n                data={DATA}\n                renderItem={renderItem}\n                keyExtractor={item => item.id}\n                onPress={() => navigation.navigate(\"Edit\")}\n            />\n\n            </SafeAreaView>\n        </View>\n    );\n\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        borderColor: 'red',\n        borderWidth: 2,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    header: {\n        fontSize: 30,\n        marginBottom: 20,\n        marginTop: 10\n    },\n    itemBox: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      flexDirection: \"row\",\n      borderWidth: 2,\n      borderLeftWidth: 0,\n      borderRightWidth: 0,\n      width: \"100%\",\n      height: 63\n    },\n    safeArea: {\n      flex: 1\n    },\n    time:{\n      fontSize: 34\n    }\n});\n"]},"metadata":{},"sourceType":"module"}