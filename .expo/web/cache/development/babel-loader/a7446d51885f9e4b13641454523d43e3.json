{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vincentcastigliola/Work/WhyWakeUp/wake-up-now/components/TimePicker.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nexport default function EditScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(new Date(1598051730000)),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState('time'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  console.log(new Date(1598051730000));\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  var newDate = route.params.newDate;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    onPress: showTimepicker,\n    title: \"Show time picker!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    timeZoneOffsetInMinutes: 0,\n    value: date,\n    mode: mode,\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }));\n}\n;","map":{"version":3,"sources":["/Users/vincentcastigliola/Work/WhyWakeUp/wake-up-now/components/TimePicker.js"],"names":["React","useState","DateTimePicker","EditScreen","route","navigation","Date","date","setDate","mode","setMode","show","setShow","console","log","onChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","showTimepicker","newDate","params"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;AAEA,eAAe,SAASC,UAAT,OAAyC;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAAA,kBAC9BJ,QAAQ,CAAC,IAAIK,IAAJ,CAAS,aAAT,CAAD,CADsB;AAAA;AAAA,MAC/CC,IAD+C;AAAA,MACzCC,OADyC;;AAAA,mBAE9BP,QAAQ,CAAC,MAAD,CAFsB;AAAA;AAAA,MAE/CQ,IAF+C;AAAA,MAEzCC,OAFyC;;AAAA,mBAG9BT,QAAQ,CAAC,KAAD,CAHsB;AAAA;AAAA,MAG/CU,IAH+C;AAAA,MAGzCC,OAHyC;;AAKtDC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAIR,IAAJ,CAAS,aAAT,CAAZ;;AAEA,MAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,YAAR,EAAyB;AACxC,QAAMC,WAAW,GAAGD,YAAY,IAAIV,IAApC;AACAK,IAAAA,OAAO,CAACO,QAAQ,CAACC,EAAT,KAAgB,KAAjB,CAAP;AACAZ,IAAAA,OAAO,CAACU,WAAD,CAAP;AACD,GAJD;;AAMA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAAC,WAAW,EAAI;AAC9BV,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,OAAO,CAACY,WAAD,CAAP;AACD,GAHD;;AAKA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BF,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,GAFD;;AAIA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BH,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,GAFD;;AAtBsD,MA0B9CI,OA1B8C,GA0BlCrB,KAAK,CAACsB,MA1B4B,CA0B9CD,OA1B8C;AA4BtD,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,cAAjB;AAAiC,IAAA,KAAK,EAAC,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKI,oBAAC,cAAD;AACE,IAAA,MAAM,EAAC,gBADT;AAEE,IAAA,uBAAuB,EAAE,CAF3B;AAGE,IAAA,KAAK,EAAEjB,IAHT;AAIE,IAAA,IAAI,EAAEE,IAJR;AAKE,IAAA,QAAQ,EAAE,IALZ;AAME,IAAA,OAAO,EAAC,SANV;AAOE,IAAA,QAAQ,EAAEM,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF;AAkBD;AAAA","sourcesContent":["import React, {useState} from 'react';\nimport {View, Button, Platform} from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nexport default function EditScreen({route, navigation}) {\n  const [date, setDate] = useState(new Date(1598051730000));\n  const [mode, setMode] = useState('time');\n  const [show, setShow] = useState(false);\n\n  console.log(new Date(1598051730000));\n\n  const onChange = (event, selectedDate) => {\n    const currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setDate(currentDate);\n  };\n\n  const showMode = currentMode => {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  const showDatepicker = () => {\n    showMode('date');\n  };\n\n  const showTimepicker = () => {\n    showMode('time');\n  };\n\n  const { newDate } = route.params;\n\n  return (\n    <View>\n      <View>\n        <Button onPress={showTimepicker} title=\"Show time picker!\" />\n      </View>\n      {/* {show && ( */}\n        <DateTimePicker\n          testID=\"dateTimePicker\"\n          timeZoneOffsetInMinutes={0}\n          value={date}\n          mode={mode}\n          is24Hour={true}\n          display=\"default\"\n          onChange={onChange}\n        />\n      {/* )} */}\n    </View>\n  );\n};"]},"metadata":{},"sourceType":"module"}