{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import { AsyncStorage } from 'react-native';\n// import * as Permissions from 'expo-permissions';\n// import * as Notifications from 'expo-notifications';\n// import axios from 'axios';\n// import Constants from 'expo-constants';\n//\n// export default  registerForPushNotificationsAsync = async () => {\n//     if (Constants.isDevice) {\n//         const { status: existingStatus } = await Permissions.getAsync(Permissions.NOTIFICATIONS);\n//         let finalStatus = existingStatus;\n//         if (existingStatus !== 'granted') {\n//             const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n//             finalStatus = status;\n//         }\n//         if (finalStatus !== 'granted') {\n//             alert('Failed to get push token for push notification!');\n//             return;\n//         }\n//         const token = await Notifications.getExpoPushTokenAsync();\n//         console.log('token token', token);\n//         return token;\n//     } else {\n//         alert('Must use physical device for Push Notifications');\n//     }\n//\n//     if (Platform.OS === 'android') {\n//         Notifications.setNotificationChannelAsync('default', {\n//             name: 'default',\n//             importance: Notifications.AndroidImportance.MAX,\n//             vibrationPattern: [0, 250, 250, 250],\n//             lightColor: '#FF231F7C',\n//         });\n//     }\n// };\n"]},"metadata":{},"sourceType":"script"}